public class leetcode2sumLinkedlist {

    public static void main(String[] args) {
        Linkednode head1 = new Linkednode(2);
        Linkednode node1 = new Linkednode(4);
        Linkednode node2 = new Linkednode(4);

        head1.setNext(node1);
        node1.setNext(node2);

        Linkednode head2 = new Linkednode(5);
        Linkednode node3 = new Linkednode(6);
        Linkednode node4 = new Linkednode(7);

        head2.setNext(node3);
        node3.setNext(node4);

        Linkednode curnode = sumLinkedlist(head1,head2);

        while(curnode != null){
            System.out.print(curnode.val);
            curnode = curnode.next;
        }

    }

    private static Linkednode sumLinkedlist(Linkednode head1,Linkednode head2){
        Linkednode head = new Linkednode(0);
        Linkednode curnode = head;
        int carry = 0;
        Linkednode p = head1;
        Linkednode q = head2;


        while(p != null || q != null){
            int x = (p != null)?p.val:0;
            int y = (q != null)?q.val:0;

            int sum = x + y + carry;
            carry = (sum / 10 == 0) ? 0 : 1;
            curnode.next = new Linkednode(sum %10);
            p = (p.next != null) ? p.next : null;
            q = (q.next != null) ? q.next : null;
            curnode = curnode.next;
        }

        if(carry != 0){
            curnode.next = new Linkednode(carry);
        }
        return head.next;
    }
}

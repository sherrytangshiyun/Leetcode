
class Node{
    Node next;
    int val;
    Node(int x){
        val = x;
    }
}

public class isHuiwenLinkedList {
    public static void main(String[] args) {

    }

    private static boolean isHuiwen(Node head){
        Node slow = head;
        Node fast = head.next;

        while(fast != null || fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }

        Node curHead = reverseList(slow.next); //找到链表中间节点，将后半段链表反转
        slow.next = null;

        //比较前半段链表和后半段反转后的链表是否完全相同，如果相同则是回文
        while(head != null && curHead != null){
            if(head.val != curHead.val)
                return false;
            slow = slow.next;
            head = head.next;

        }
        return true;
    }


    private static Node reverseList(Node head){
        if(head == null || head.next == null){
            return head;
        }

        Node getHead = reverseList(head.next);
        head.next.next = head;
        head.next = null;
        return getHead;
    }
}
